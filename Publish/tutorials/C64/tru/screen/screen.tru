Unit Screen;

/*

	Library for char-based screen handling

*/

var
   	p1, sp, cp : pointer;
	i, j, x, y, c : byte;


procedure PrintSingleChar( i : global byte) inline;
begin
	sp^ := i;
	cp^ := c;
		// Advance poniters
	sp := sp + 1;
	cp := cp + 1;
	p1 := p1 +1;

end;


procedure PrintCStringColor(p1 : global pointer; x, y, c : global byte);
begin
	sp := #screen_char_loc + y*screen_width + x;
	cp := $D800 + y*screen_width + x;
	
	while (p1^<>0) do
		PrintSingleChar(p1^);
		
end;

procedure PrintStringColor(p1 : global pointer; x, y, c : global byte);
begin
	sp := #screen_char_loc + y*screen_width + x;
	cp := $D800 + y*screen_width + x;
	
	while (p1^<>0) do
	begin	
		j := p1^;
		if (j>64) then j:=j-64;
		PrintSingleChar(j);
	end;
end;

end.
