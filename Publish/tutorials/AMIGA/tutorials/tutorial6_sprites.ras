program Tutorial6_Sprites;
@use "graphics"

@requirefile "data/sprites_data.bin" "Please execute the Fjong raytracer file 'tutorials6_sprites.fjo' before compiling this program"

var	

   	j,time: integer = 0; 
   	x,y : byte;
	sin : array[256] of byte = buildtable("Math.sin(i/256.0*2*3.14159)*127 +127");
   	sprites : incbin("data/sprites_data.bin");
   	
// 2 bitplanes
   	const bpl : integer = 2;

	table2: pointer of integer;
		

	sprite_struct1 : array[70] of integer chipmem;
   	screen_data : array[bpl*40*200] of byte chipmem;
	




// Updates the X/Y position of a sprite
procedure UpdateSpritePos(spo : pointer of byte; u_cx, u_cy, u_height:byte);
begin
	spo[1]:=u_cx; // X
	spo[0]:=u_cy; // Y 
	spo[2]:=u_cy+u_height; // Y+height
	spo[3]:=0;
end;



interrupt Raster();
begin
	time:=time+1;
	ApplyCopperList();
	
	// Calculate some funky sines
	x:=sin[time&255]/2;
	y:=sin[(time+64)&255]/2;
	x:=x+64;
	y:=y+64;
	UpdateSpritePos(sprite_struct1, x,y, 32);

	// Find frame in data	
	j:=(time&63)<<7; // 64 frames in total, 128 bytes per frame (<<7)
	// Copy over 32*4=128 bytes of data
	memcpy(sprites,j,sprite_struct1,4,32,4);
end;


procedure Init();
begin
	// Clear screen
	fill(screen_data, 0 ,10*bpl*201);
	
	// Set four colours	
	
	poke16(copper_palette,2+1*16,$00);	
	poke16(copper_palette,2+4*17,$0800);	
	poke16(copper_palette,2+4*18,$0F16);	
	poke16(copper_palette,2+4*19,$0FA2);	
	
	// Setup copper sprite pointer
	setcopperlist32(sprite_struct1, copper_spritestruct0);

end;


begin	
	Graphics::SetupDefaultScreen(screen_data,bpl);
	Init();
	vbirq(Raster());
	EnableInterrupt(VB_IRQ);
	Loop();
end.
