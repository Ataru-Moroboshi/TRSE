program MyProgram;
var  
   i,j,b,k,l: byte; 
   in : integer;
	zp:pointer;   
	@define spritePos $a000
	curFrame : byte = 0;
	ix,iy : integer = 0;
	sprites : incbin("data/example7_sprite.bin",@spritePos);
	
// Set som funky palette
procedure SetPalette(aa,bb,cc:byte);
var
  ia,ib,ic: byte;
begin
	for i:=0 to 64 do 
	begin
		ia:=i/aa;
		ib:=i/bb;
		ic:=i/cc;
		SetColor(ia,ib,ic);
	end;

end;

procedure UpdateSprites();
begin
	curFrame:=(curFrame +1)&15;
	k:=0;
	j:=curFrame;
	for i:=0 to 64 do 
	begin
		initsprite(i);
		j:=(j+1)&15;
		in:=$8200 + j*8;
		setspriteloc(in);
	end;	

end;

procedure InitSprites();
begin
	EnableSprites(1);
	
	for i:=0 to 64  do begin
		initsprite(i);
		
		ix:=random()*2;
		iy:=random()*2;
		
		spritepos(ix,iy);
		spritedepth(3); // In front ofall
		spritesize(1,1);// 16x16
		
		j:=(random()&3)*4; // 64 colour shift RGB
		
		SpritePaletteOffset(j);	
	end;

end;


begin

	CopyDataToVera(^@spritePos, $00,$40,$00, 16);  

	Initpalette(0);
	SetPalette(8,6,4);
	SetPalette(8,4,8);
	SetPalette(4,12,12);
	SetPalette(4,16,4);
	
//	CopyDataToVera();
	// 32 bytes per address OK
	InitSprites();

	while (true) do 
	begin
		UpdateSprites();
		for i:=0 to 255 do wait(50);
	end;

end.
