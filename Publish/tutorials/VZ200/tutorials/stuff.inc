procedure stuff_0();
begin
asm ("
  ld de, $1c
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$03
 ld [hl],a
 inc hl 
 ld a,$fc
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$0f
 ld [hl],a
 inc hl 
 ld a,$7f
 ld [hl],a
 inc hl 
 ld a,$f7
 ld [hl],a
 inc hl 
 ld a,$c0
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$0f
 ld [hl],a
 inc hl 
 ld a,$d7
 ld [hl],a
 inc hl 
 ld a,$57
 ld [hl],a
 inc hl 
 ld a,$c0
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$0f
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$fc
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$ee
 ld [hl],a
 inc hl 
 ld a,$c0
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
");
end;
procedure stuff_1();
begin
asm ("
  ld de, $1c
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$3f
 ld [hl],a
 inc hl 
 ld a,$c0
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$03
 ld [hl],a
 inc hl 
 ld a,$df
 ld [hl],a
 inc hl 
 ld a,$fd
 ld [hl],a
 inc hl 
 ld a,$f0
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$03
 ld [hl],a
 inc hl 
 ld a,$f5
 ld [hl],a
 inc hl 
 ld a,$d5
 ld [hl],a
 inc hl 
 ld a,$f0
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$03
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$3b
 ld [hl],a
 inc hl 
 ld a,$b0
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
");
end;
procedure stuff_2();
begin
asm ("
  ld de, $1c
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$3f
 ld [hl],a
 inc hl 
 ld a,$cf
 ld [hl],a
 inc hl 
 ld a,$f0
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$f7
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$7c
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$fd
 ld [hl],a
 inc hl 
 ld a,$75
 ld [hl],a
 inc hl 
 ld a,$7c
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$c0
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$0e
 ld [hl],a
 inc hl 
 ld a,$ec
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
");
end;
procedure stuff_3();
begin
asm ("
  ld de, $1c
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$0f
 ld [hl],a
 inc hl 
 ld a,$f3
 ld [hl],a
 inc hl 
 ld a,$fc
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$3d
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$df
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$3f
 ld [hl],a
 inc hl 
 ld a,$5d
 ld [hl],a
 inc hl 
 ld a,$5f
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$3f
 ld [hl],a
 inc hl 
 ld a,$ff
 ld [hl],a
 inc hl 
 ld a,$f0
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$03
 ld [hl],a
 inc hl 
 ld a,$bb
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
 ld a,$00
 ld [hl],a
 inc hl 
  add hl,de
");
end;
var stuff_pi : integer;
@donotremove stuff_dst 
procedure stuff(stuff_src,stuff_dst : pointer; stuffpx,stuffpy : byte);
begin
  stuff_pi:=stuff_dst + stuffpy<<5 + stuffpx>>2;
asm("  ld hl, [stuff_src] 
  ex de, hl
  ld hl, [stuff_pi]
");
 stuffpx:=stuffpx&3;
 if (stuffpx=0) then stuff_0();
 if (stuffpx=1) then stuff_1();
 if (stuffpx=2) then stuff_2();
 if (stuffpx=3) then stuff_3();
end;
