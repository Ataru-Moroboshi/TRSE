program Tutorial1;
@use "crtc"
@use "memory"
@use "text"
/*

 Hi there, and welcome to the first tutorial for the amstrad CPC in TRSE!
 
 First of all, in order to compile these programs you'll need two things installed:
   - pasmo z80 assembler (https://pasmo.speccy.org)
   - caprice 32. You will need a newer release that supports injection.
   - make sure you set up a link to these programs in the TRSE settings dialoge panel
   
 Afterwards, every tutorial / sample project in TRSE should run without problems!
 
 Press "F1" on unit methods for help

*/

// TRSE image by Optic
// Automatically export trse.flf to a native CPC binary
@export "resources/images/trse.flf" "resources/images/trse.bin" 256

var  
// Include the exported image data + palette
	image : incbin("resources/images/trse.bin");
	palette : incbin("resources/images/trse_palette.bin");
  // Print with immediate value
	
	zp:pointer;
	ii:byte;
	
begin
	// Set 160x200 16-color mode
//	Crtc::InitDefault(0);
	//Crtc::SetMode(0);
	// Set palette
	//loop();
	// Copy image to screen 
	
//  Text::MoveCursorTo(3, 3);
 // Text::Print("Print a string\r\n");

	asm("
	    ld a,$50
		ld ($3),A
		out ($2),a
	");
	//memcpy(#image, $8000, $4000);
	zp:=$8000;
	for ii:=0 to 128 do zp[ii]:=ii;
	
	
	while (true) do
	begin	
		
	end;
	// halt the computer
//	Loop();
	

end.
