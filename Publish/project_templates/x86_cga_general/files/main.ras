program X64_8086_AT_CGA;
var  
    time,i,delta,k,t: byte;
    x,y,z: integer = 0; 
	src,dst : pointer;   
// Needed for the sprite compiler
	ds_xx, ds_yy, ds_ddx : integer;
// Include a sine table
	sine : incbin("data/sine.bin");
	
// Automatically export the image
@export "images/image.flf" "images/image.bin" 0
	data : incbin("images/image.bin");

// Compile the sprite at cell 0,0 - 5,3 (cat)
@spritecompiler "images/sprites.flf" "cat" 0 0 5 3
// Compile the sprite at cell 0,5 - 5,7 (plane)
@spritecompiler "images/sprites.flf" "plane" 0 5 5 7


begin
	setscreenmode(mode_cga_320x200);
	time:=0;
	delta:=0;
	// Copy image to screen
	memcpyw(data,screen_cga,8000);
	while(true) do
	begin
		for t:=0 to 6 do
		begin
			k:=t*44;
			y:=sine[time+k]/4 + 10;
			x:=sine[time+64+delta+k]/2+120;
			// These methods are generated by the sprite compiler
			if (t<2) then
				drawsprite_cga_cat(data, screen_cga,x,y)
			else
				drawsprite_cga_plane(data, screen_cga,x,y);
		end;
		
		time:=time+1;
		k:=time&3;
		// Add a shift to the circle movement		
		if (k=2) then delta:=delta+1;
		
		waitforverticalblank();
		
	end;
end.
