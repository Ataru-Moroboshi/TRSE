<h3>MemCpyUnroll( [address1 source], [byte1 offset], [address2 destination], [byte2 total] );
</h3>
<ul>
    <li>[address1 source] - Source address to copy from</li>
    <li>[byte1 offset] - offset to start copying from</li>
    <li>[address2 destination] - destination address to copy to</li>
    <li>[byte2 total] - number of bytes to copy</li>
</ul>


<h3>Description</h3>
<p>unroll is mega fast compared to the other memcpy commands but it consumes memory</p>

<p>In assembler does something like this</p>

<code>
B[0] := A[0];
B[1] := A[1];
B[2] := A[2];
</code>



<h3>Example</h3>

<code>
    // copies 16 bytes = from color memory to some user-defined pointer
    MemCpy(^$D800, 0, my_ptr, 16);
</code>


<h3>Notes:</h3>

<p>Make sure that the Source and the Destinatin pointers are initialised as Integers</p>
<p>You can't use expressions in the command</p>


<code>
	s: pointer of integer;
	d: pointer of integer;
	
	s:=1154;
	d:=1153;

	MemCpyUnroll(s, 0, d, 20);
</code>

	