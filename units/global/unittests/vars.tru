unit Vars;
var  
	sc, co : pointer; 			// screen and colour RAM pointers
	text: string = "TEST    ";	// text to display when writing a test result
	@define COLUMNWIDTH 5

	v1, v2,v3,rb,v4 : byte;
	i1, i2,i3,i4,ri, j2 : integer;
	p1, p2,rp : pointer;
	a1,a2 : array[10] of integer;
	j,i : byte;


	Point = class
		x,y : byte;
		procedure Move2( pm1, pm2 : byte);
		begin
			this.x := pm1;
			this.y := pm2;			
		end;
		
	end;

	Monster = class
		x,y : byte;
		ival : integer;
		pos: Point;
		byteData : array[5] of byte;
		c : byte;
		intData : array[7] of integer;
	//	more : array[3] of Point;		
		procedure Move1( m1, m2 : byte);
		begin
			this.x := m1;
			this.y := m2;			
		end;
	end;


	pm : pointer of Monster;
	m : Monster;
	const NN : integer = 10;
	monsters: array[ NN ] of Monster;
	zp: pointer;



end.
