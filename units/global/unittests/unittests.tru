Unit Unittests;

@use "unittests/common"
@use "unittests/case"
@use "unittests/integer"
@use "unittests/classes"
@use "unittests/ifthenelse"
@use "unittests/muldiv"

@use "unittests/advanced_math"



var
//	allTests: array[] of integer = (#AdvancedTests);
	const noTests :byte = 5;
	currentTest : byte = 0;
	isDone: boolean = false;

procedure Exec();
begin
	Common::TestInit();
	while (Common::Status() = 0 and isDone = false) do
	begin
		Common::TestSuiteInit();
		if (currentTest=0) then Classes::Exec();
		if (currentTest=1) then CaseTest::Exec();
		if (currentTest=5) then MulDiv::Exec();
		if (currentTest=2) then IfThenElse::Exec();
		if (currentTest=3) then IntegerTest::Exec();
		@ifndef X86
		if (currentTest=4) then AdvancedMath::Exec();
		@endif
		currentTest+=1;
		if (currentTest>noTests) then
			isDone := true;
		
	end;
end;

end.
