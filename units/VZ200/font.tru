unit Font;
var

	text, currentFont:pointer;
	@donotremove currentFont
	tx,ty : byte;
	@donotremove tpos
	tpos : Integer;
	font1: array[] of byte=(
	
   $00,$00,$00,$00,$00,
   $10,$10,$10,$00,$10,
   $44,$44,$00,$00,$00,
   $44,$54,$44,$54,$44,
   $10,$54,$50,$14,$54,
   $44,$04,$10,$40,$44,
   $10,$44,$11,$44,$11,
   $10,$10,$00,$00,$00,
   $04,$10,$10,$10,$04,
   $40,$10,$10,$10,$40,
   $44,$10,$54,$10,$44,
   $00,$10,$54,$10,$00,
   $00,$00,$00,$10,$40,
   $00,$00,$54,$00,$00,
   $00,$00,$00,$00,$40,
   $04,$04,$10,$40,$40,
   $54,$44,$44,$44,$54,
   $10,$50,$10,$10,$54,
   $54,$04,$54,$40,$54,
   $54,$04,$14,$04,$54,
   $44,$44,$54,$04,$04,
   $54,$40,$54,$04,$54,
   $54,$40,$54,$44,$54,
   $54,$04,$04,$04,$04,
   $54,$44,$54,$44,$54,
   $54,$44,$54,$04,$04,
   $00,$40,$00,$40,$00,
   $00,$10,$00,$10,$40,
   $04,$10,$40,$10,$04,
   $00,$54,$00,$54,$00,
   $40,$10,$04,$10,$40,
   $54,$04,$10,$00,$10,
   $10,$44,$44,$40,$14,
   $10,$44,$54,$44,$44,
   $50,$44,$50,$44,$50,
   $14,$40,$40,$40,$14,
   $50,$44,$44,$44,$50,
   $54,$40,$50,$40,$54,
   $54,$40,$50,$40,$40,
   $14,$40,$44,$44,$14,
   $44,$44,$54,$44,$44,
   $54,$10,$10,$10,$54,
   $54,$04,$04,$44,$10,
   $44,$44,$50,$44,$44,
   $40,$40,$40,$40,$54,
   $44,$54,$44,$44,$44,
   $10,$44,$44,$44,$44,
   $10,$44,$44,$44,$10,
   $50,$44,$50,$40,$40,
   $10,$44,$44,$44,$14,
   $50,$44,$50,$44,$44,
   $14,$40,$10,$04,$50,
   $54,$10,$10,$10,$10,
   $44,$44,$44,$44,$14,
   $44,$44,$44,$44,$10,
   $44,$44,$44,$54,$44,
   $44,$44,$10,$44,$44,
   $44,$44,$44,$10,$10,
   $54,$04,$10,$40,$54,
   $54,$40,$40,$40,$54,
   $40,$40,$10,$04,$04,
   $54,$04,$04,$04,$54,
   $10,$44,$00,$00,$00,
   $00,$00,$00,$00,$54,
   $40,$10,$00,$00,$00,
   $00,$14,$44,$44,$14,
   $40,$50,$44,$44,$50,
   $00,$14,$40,$40,$14,
   $04,$14,$44,$44,$14,
   $10,$44,$50,$40,$14,
   $14,$10,$54,$10,$10,
   $10,$44,$14,$04,$50,
   $40,$40,$50,$44,$44,
   $10,$00,$10,$10,$10,
   $04,$00,$04,$44,$10,
   $40,$44,$50,$44,$44,
   $10,$10,$10,$10,$10,
   $00,$44,$54,$44,$44,
   $00,$10,$44,$44,$44,
   $00,$10,$44,$44,$10,
   $00,$10,$44,$50,$40,
   $00,$10,$44,$14,$04,
   $00,$10,$44,$40,$40,
   $00,$14,$50,$14,$50,
   $40,$50,$40,$44,$10,
   $00,$44,$44,$44,$14,
   $00,$44,$44,$44,$10,
   $00,$44,$44,$54,$44,
   $00,$44,$10,$10,$44,
   $00,$44,$14,$04,$10,
   $00,$54,$14,$50,$54,
   $14,$10,$40,$10,$14,
   $10,$10,$10,$10,$10,
   $50,$10,$04,$10,$50,
   $11,$44,$00,$00,$00);

/**
	Sets the current font 

**/
procedure SetFont(currentFont : global pointer);
begin
	
end;

/**
  Draws a string in mode(1) graphics mode at x,y
  Note: Use SetFont() first to configure which to draw.
        Make sure you use SetPen first or it will draw in the default red.
        The font is rendered with transparency.
        
  **/
  
procedure DrawTextAt(text : global pointer; tx, ty : global byte);
begin
  tpos := 28672+32*ty+tx;
  asm("
    ld de,[Font_text]
    ld hl,[Font_tpos]
    push de         ; String to display, first char
    push hl         ; Location onscreen to display char
strngloop    
    ld a,(de)       ; Get string char
endloop    
    cp #00          ; End of string?
    jp z,enddraw    ; Yes, stop drawing.
    sub #20         ; No, get index of fontdata for char
    ld d,#00
    ld e,a
    ld h,#00
    ld l,a   
    add hl,de
    add hl,de
    add hl,de
    add hl,de
    push hl
    pop bc
    ld hl,[Font_currentFont]  ; Start of fontdata to draw
    add hl,bc       ; hl points to correct letter to draw
    push hl
    ld a,#05        ; Number of lines down to draw font letter
drawloop 
    ld (loopcnt),a
    ld a,(hl)
    push af         ; Save first byte to draw
    ld a,(#7846) 
    cp #00
    jp z,enddraw
    cp #01
    jr z,drawletter
    cp #02
    jr z,addblue
    pop af
    ld d,a
    sla a
    add a,d
    jr drawletter2  ; Font byte is coloured red
addblue
    xor a
    pop af
    rl a
    jr drawletter2
drawletter
    pop af
drawletter2    
    pop bc          ; Font data pointer          
    pop hl          ; Coords to display fontbyte
    ld d,a
    ld a,(hl)
    xor d
    ld (hl),a       ; Put it there
    ld de,#0020
    add hl,de       ; Move screen coords pointer down 1 line
    inc bc
    push hl         ; Screen pointer
    push bc         ; Font data pointer
    ld l,c          ; hl = font pointer
    ld h,b
    ld a,(loopcnt)
    dec a
    cp #00
    jr nz,drawloop  ; Works to here
    pop bc
    pop hl
    ld bc,#009f
    xor a
    sbc hl,bc
    pop de          ; String pointer
    inc de
    push de         ; Next char
    push hl         ; Screen pointer   
    jp strngloop
loopcnt db $00

enddraw  
  pop hl
  pop hl  ; Clear the stack!
  ");
end;

end.